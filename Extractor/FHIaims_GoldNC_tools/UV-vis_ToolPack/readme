################################################################################
#
#	06.2024 WKJEE
#
#	Compatibility: FHIaims.2022-
#
#   Using FHIaims cube files (non-periodic) to calculate UV-vis spectra
#
#	!
#	! For specific application studying Au25(SR)18 nanocluster
#	!
#
#	Supporting SOC corrected eigenvalues
#
################################################################################

 Python Scripts, which are:

	(1) Transition.py

		* Has dependency on 'ase.io.cube' module taking two inputs, possibly before/after transitions (FHIaims generated cubefiles),
		calculating transition intensity using transition dipolemoment (note that unit is not specifically adjusted) # 06.06.224
		(Make sure to create FHIaims 'eigenvector' files - do not confused with 'density', 'eigenvector_imag', etc.)

		! Under '__main__' to see how this script is used
		(A function within this script is used by 'get_transition_data_up/down.py' script in (3),
		 however, one might consider to use it independently)

		# N.B. for FHIaims calculations including imaginary parts in wavefunctions (e.g., periodic or non-periodic SOC),
		# you should consider modifying this script.

	(2) mos_analyser_2.py

		* mos_analyser_2.py : dumping selected states (+-8 from HOMO spin up/down) json files.
		(Require non-periodic, spin-polarised FHIaims calculation with 'aitranss' keyword in 'control.in')

		# N.B. this script is specifically written for Au25(SR)18 application,
		# for different application, this script must be modified.

		# * * * USER MUST SET DESIRED ROOT WHERE THIS SCRIPT IS GOING TO TAKE FHIAIMS DATA !!!

		! Execution of this script will create: 'selected_up.json' and 'selected_down.json' files,
		including: eigenvalues (eval) and orbital occupancies (occ).

	(3) get_transitions_data_up.py / get_transitions_data_down.py

		! Execution of this script will create: 'simpleUV.up/dn.out' files, including list of transitions at the botton parts,
		e.g.,{initial_eigenstate} {final_eigenstate} {final_eigenvalue - initial_eigenvalue} {transition_dipole_intensity}

		* To run this script, [a] 'selected_up/down.json' and [b] 'up/down_cubelist.dat' files are required

		 [a] files are generated by executing (2) 'mos_analyeer_2.py'.

		 [b] files include list of FHIaims generated 'cube' files with eigen value tags.

		 A file will, for example, look like,

		 1  state     cubefile
		 2  1563      spin_up_7_LUMO.cube
		 3  1562      spin_up_6_LUMO.cube
		 4  1561      spin_up_5_LUMO.cube
		 5  1560      spin_up_4_LUMO.cube
		 6  1559      spin_up_3_LUMO.cube
		 7  1558      spin_up_2_LUMO.cube
		 8  1557      spin_up_1_LUMO.cube
		 9  1556      spin_up_0_LUMO.cube
		 ...

	(4) add_soc.py

		! Execution of this script will create: 'soc_simpleUV.up/dn.out': these files are similar to 'simpleUV.up/dn.out' from (3)
		but including additional information of spin-orbit coupled eigenvalues (soc_eval) and errors w.r.t. eigenvalues (soc_err)

		* To run this script, [a] 'selected_up/down.json', [b] 'simpleUV.up/dn.out' and [c] 'SOC_eigenvalues.dat'

		 [a] files are generated by executing (2) 'mos_analyeer_2.py'.

		 [b] files are generated by executing (3) 'get_transitions_data_up/down.py'.

		 [c] file is generated by FHIaims with including 'include_spin_orbit' keyword in 'control.in'
		 (including list of spin-orbit coupling eigenvalues - after applying the perturbation - more details can be found in the manual)

